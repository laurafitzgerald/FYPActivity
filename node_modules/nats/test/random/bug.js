var Nats = require('../lib/nats');
//var server_ip = "10.0.0.20"; // this is over TCP/IP on a remote box.
//var server_ip = "107.170.221.32";
var server_ip = "127.0.0.1";
var iterations = 0,
max = 10000000,
received = 0,
subject = 'TEST',
rec_connected = false,
send_connected = false;

var isReady = function(){
  return rec_connected && send_connected;
};

var sender = Nats.connect({url: 'nats://' + server_ip + ':4222'});
sender.on('connect', function(){
  send_connected = true;
  publishLoop();
});

function publishLoop(){
  if (!isReady()){
    // ensure both sender and receiver are running before starting the loop.
    setTimeout(publishLoop,500);
  }
  else{
    console.log("-- starting publish loop -->");
    while (iterations < max){
      iterations++;
      publish(iterations);
    }
  }
}

/*
 * Send messages as fast as possible without any callback.
 * With callback this tends to be more stable but I only get throughput of 1000 per second.
 * Without callback it seems that the socket overloads?? Some how the messages are not getting separated.
 */
function publish(numb){
  sender.publish(subject, JSON.stringify({what: "test", count: numb}));
}
sender.on('error', function(exception){
  console.log("sender Can't connect to the nats-server [" + nats.options.url + "] is it running?");
});


/* ------ receiver -------- */

var receiver = Nats.connect({url: 'nats://' + server_ip + ':4222'});

receiver.on('error', function(exception){
  console.log("receiver can't connect to the nats-server [" + nats.options.url + "] is it running?");
});

receiver.on('connect', function(){
  rec_connected = true;
  receiver.subscribe(subject, function(message){
    var idx = message.indexOf('\r\nMSG ');
    if(idx > -1) {
      console.error("BAD MESSAGE:" + message.length + message.slice(0,32));
    }
    // if you get a parse error here it's likely because messages were not separated correctly.
    // this happens at high load.
    // Is there some sort of batch sending supposed to be here that is not separating to individual messages?
    var obj = JSON.parse(message);
    received++;
  });
});

console.log('Listening on [' + subject + ']', new Date().toTimeString(), "sent", iterations, " --> received", received);
setInterval(function(){
  console.log(new Date().toTimeString(), "sent", iterations, " --> received", received);
}, 1000);
